# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/ans_standard/notification.gni")
import("//build/ohos.gni")

group("native_targets") {
  deps = [ ":ans_kits" ]
}

config("ans_kits_config") {
  include_dirs = [ "${kits_path}/native/include" ]
  configs = [ "${innerkits_path}:public_ans_innerkits_config" ]
}

config("ans_kit_public_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${kits_path}/native/include",
    "${innerkits_path}/core/include",
    "${innerkits_path}/base/include",
  ]
}

ohos_shared_library("ans_kits") {
  include_dirs = [
    "${kits_path}/native/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//utils/system/safwk/native/include",
  ]

  sources = [
    "${innerkits_path}/base/src/ans_log_wrapper.cpp",
    "src/message_user.cpp",
    "src/notification.cpp",
    "src/notification_action_button.cpp",
    "src/notification_basic_content.cpp",
    "src/notification_constant.cpp",
    "src/notification_content.cpp",
    "src/notification_conversational_content.cpp",
    "src/notification_conversational_message.cpp",
    "src/notification_helper.cpp",
    "src/notification_long_text_content.cpp",
    "src/notification_media_content.cpp",
    "src/notification_multiline_content.cpp",
    "src/notification_normal_content.cpp",
    "src/notification_picture_content.cpp",
    "src/notification_request.cpp",
    "src/notification_slot.cpp",
    "src/notification_slot_group.cpp",
    "src/notification_sorting.cpp",
    "src/notification_sorting_map.cpp",
    "src/notification_subscribe_info.cpp",
    "src/notification_subscriber.cpp",
    "src/notification_user_input.cpp",
  ]

  configs = [
    "//utils/native/base:utils_config",
    "${innerkits_path}:public_ans_innerkits_config",
  ]

  public_configs = [ ":ans_kit_public_config" ]

  deps = [
    "${innerkits_path}:ans_innerkits",
    "${kits_path}/native/wantagent:wantagent_kits",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/distributedschedule/dmsfwk/interfaces/innerkits/uri:zuri",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_L2:samgr_proxy",
  ]

  if (is_double_framework) {
    cflags = [ "-DCONFIG_DUAL_FRAMEWORK" ]
  }

  subsystem_name = "notification"
  part_name = "ans_standard"
}
