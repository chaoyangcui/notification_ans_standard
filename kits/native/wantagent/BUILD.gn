# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/ans_standard/notification.gni")
import("//build/ohos.gni")

group("native_wantagent") {
  deps = [ ":wantagent_kits" ]
}

config("wantagent_kit_public_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${innerkits_path}/core/include",
    "${innerkits_path}/base/include",
    "${kits_path}/native/wantagent/include",
    "//base/global/resmgr_standard/interfaces/innerkits/include",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/services/abilitymgr/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include/appmgr",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include/bundlemgr",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
    "//foundation/appexecfwk/standard/kits/appkit/native/app/include",
    "//third_party/icu/icu4c/source/common",
  ]
}

ohos_shared_library("wantagent_kits") {
  include_dirs = [
    "//utils/native/base/include",
    "//foundation/aafwk/standard/services/common/include",
    "//foundation/distributedschedule/safwk/services/safwk/include",
    "//base/notification/ces_standard/cesfwk/innerkits/include",
    "//base/notification/ces_standard/cesfwk/kits/native/include",
  ]

  sources = [
    "src/completed_dispatcher.cpp",
    "src/pending_want.cpp",
    "src/trigger_info.cpp",
    "src/want_agent.cpp",
    "src/want_agent_helper.cpp",
    "src/want_agent_info.cpp",
    "src/want_agent_log_wrapper.cpp",
  ]

  configs = [ "//utils/native/base:utils_config" ]

  public_configs = [ ":wantagent_kit_public_config" ]

  deps = [
    "//base/notification/ces_standard/cesfwk/innerkits:cesfwk_innerkits",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core:appexecfwk_core",
    "//foundation/appexecfwk/standard/kits:appkit_native",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_L2:samgr_proxy",
  ]

  if (is_double_framework) {
    cflags = [ "-DCONFIG_DUAL_FRAMEWORK" ]
  }

  subsystem_name = "notification"
  part_name = "ans_standard"
}
